---
import ProductSlidesShow from "@/components/products/ProductSlidesShow.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import { actions } from "astro:actions";

interface Props {}

const { slug } = Astro.params;

const { data, error } = await actions.getProductBySlug(slug ?? "");

if (error) {
    return Astro.redirect("/404");
}

const { product, images } = data;
---

<MainLayout title={product.title} description={product.description}>
    <!-- image={image} -->
    <!-- <h1>{product.title}</h1> -->

    <div class="grid grid-cols-1 md:grid-cols-3 w-full gap-4">
        <ProductSlidesShow images={images.map( img => img.image )} />

        <section>
            <h2 class="text-2xl font-bold">{product.title}</h2>
            <h2 class="font-bold">${product.price}</h2>

            <h3 class="mt-5">Tallas</h3>
            <ul class="flex gap-3">
                {
                    product.sizes
                        .split(",")
                        .map((size) => <li data-size={size}>{size}</li>)
                }
            </ul>

            <h3 class="mt-5">Cantidad</h3>
            <div>
                <button class="btn-quantity">-</button>
                <input
                    id="ed-quantity"
                    type="number"
                    min="1"
                    value="1"
                    disabled
                />
                <button class="btn-quantity">+</button>
            </div>

            <button
                class="mt-5 bg-blue-500 text-white p-3 w-full disabled:bg-gray-500"
                >Añadir al carrito</button
            >

            <h3 class="mt-10">Descripción</h3>
            <p>{product.description}</p>
        </section>
    </div>

    <input type="hidden" id="product-id" value={product.id} />
</MainLayout>

<script>
    import { CartCookiesClient } from "@/utils";
    import { itemsInCart } from "@/cart";
    import { navigate } from "astro:transitions/client";

    document.addEventListener("astro:page-load", () => {
        const sizeElements = document.querySelectorAll("li");

        if (sizeElements.length === 0) {
            return;
        }

        sizeElements.forEach((li) => {
            li.addEventListener("click", () => {
                sizeElements.forEach((sz) =>
                    sz.classList.remove("selected-size"),
                );

                li.classList.add("selected-size");
            });
        });

        const edQuantity = document.querySelector(
            "#ed-quantity",
        ) as HTMLInputElement;

        const edProduct = document.querySelector(
            "#product-id",
        ) as HTMLInputElement;

        let quantity = 1;

        const [buDecrement, buIncrement, buAddToCard] =
            document.querySelectorAll("button");

        buDecrement.addEventListener("click", () => {
            quantity = Math.max(quantity - 1, 1);
            edQuantity.value = quantity.toString();
        });

        buIncrement.addEventListener("click", () => {
            quantity = Math.min(quantity + 1, 5);
            edQuantity.value = quantity.toString();
        });

        if (!buIncrement || !edQuantity) return;

        buAddToCard.addEventListener("click", () => {
            const size = document.querySelector(".selected-size")?.textContent;

            if (!size) {
                return alert("seleccione una talla");
            }

            buAddToCard.disabled = true;

            const cart = CartCookiesClient.addItem({
                product: edProduct.value,
                size: size,
                quantity: +edQuantity.value,
            });

            itemsInCart.set(cart.length);
            // console.log(itemsInCart.get());

            // console.log({
            //     id: edProduct.value,
            //     size: size,
            //     quantity: +edQuantity.value,
            // })

            // buAddToCard.disabled = false;

            // window.location.href = '/cart';

            navigate("/cart");
        });
    });
</script>

<style>
    h3 {
        @apply font-bold;
    }

    li {
        @apply hover:underline cursor-pointer;
    }

    .selected-size {
        @apply text-blue-500 underline font-bold transition-all;
    }

    .btn-quantity {
        @apply w-10 text-center p-2 border border-gray-300 hover:bg-gray-100 cursor-pointer;
    }

    input {
        @apply w-16 text-center p-2 border border-gray-300;
    }

    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type="number"] {
        -moz-appearance: textfield; /* Para Firefox */
    }
</style>
